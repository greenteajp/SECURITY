09/27/2022

http://10.50.22.9:8000/:  
        DOJO-006-M: Greentea9911$$
ssh student@10.50.38.82 -Y (LINOPS)
grayhost: 10.50.37.221  3t6RPW1ejaWtWC0 (password) (dont log in from greyhost, only from linops)
https://sec.cybbh.io/public/security/latest/index.html
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PENETRATION TESTING OVERVIEW:
  ??? check student guide...
  
  
  
VULNERABILITY AND EXPLOITATION RESEARCH:
  Initial access: 
    Phishing is the most common way.
    Initial access if first hook into sys (whatever method).
  Research:
    Majority of research immediately after recon.
    Research outdated protocols, services, OS.  
      Multi-Source:
        Databases, exploit-DB, CVE's, online articles, MITRE
  Testing:
    Testing exploitations on own stations to verify validitiy of exploits/attacks. Paste-its.
    
  RECON:
    Collections and Use:
      Social Media, Web Data, Sensitive data, Public Accessible, Domain and IP Addr Data collections.
    
  HTML:
    stnd markup language for browser interp of webpages
      clien-side interpret (web browser)
      Utilizes elements (ident by tags)
      Typically redirects to another page for server-side interac
      Cascading Stylesheets(CSS) for page themeing
      
  ***Scanning Tech:
     1:) Host Disc:
        Ping sweep (run on closest to network trying to scan)
             for i in {1..254}; do (ping -c 1 192.168.1.$i | grep "bytes from" &); done
                         ^change based on cidr    ^change based on tgt ip       
     2:) Host Enum:   
        Scan for ports 21-25,80 ; 0-1023 ; abnormal ports 
        For single targets (run at max 3 times):
                nmap -Pn -T4 <ip> -p21-23,80,8080,8888,2222,4444 
     3:) Host Interr:
        NC/Banner grabbing,nikto, nmap double check ports
                nc <ip> <port> (banner grabbing to check if port is the known protocol,etc)
                nmap -sV <ip> -p <ports>
                nikto -h <ip> -p <ports>
                
     ***NMAP Scripting Engine:
       /usr/share/nmap/scripts
       nmap -Pn -T4 <ip> -p <ports> --script=banner.nse 
                                    --script=http-enum.nse <ip> -p <port>      (use to enum well known paths/dir from websites)
       nmap -p 445 --script smb-os-discovery <IP/subnet>        (OS, computer name, netbios name, domain)
       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
WEB EXPLOITATION DAY1 (XSS):
   Server/Client Relat
     synchronous comms btw user and serv
     not all data is not returned, client only rec what is allowed
   HTTP
     Request/Response, view with tcpdump, wireshark, developer console
     Methods: GET, POST, HEAD, PUT
     Response Codes:
        10XX , info
        2XX, Success
        30X, redir
        4XX, client err
        5XX, Server err
     
   JS Interaction
   'function'

   HTTP Enum
      ROBOTS.TXT
      Legit surfing
      Tools:
        NSE scripts nmap --script=http-enum.nse <ip> -p <port>
        Nikto - nikto -host <ip> -port <port>
        burp suite
   
***Cross-Site Scripting (XSS):
      Reflected XSS
         most common form on XSS
         transient, occurs in error msgs or search results
         deliv thru intermed media, link in email
         char that are normally illegalin URLs can be Base64
      Stored XSS
         resides on vuln site
         only requires user to visit page
                        <img src="http://invalid" onerror="window.open('http://10.50.XX.XX:8000/ram.png','xss','height=1,width=1');">

  Useful JavaScript Components
        <script>alert('XSS');</script>
    Capturing Cookies
    document.cookie
    Capturing Keystrokes
        bind keydown and keyup
    Capturing Sensitive Data
    document.body.innerHTML

  Server-Side injection
        Dir Path/ Path Traversal
        Ability to read/execute outside web server's dir
        uses ../../ (rel path) in manipul a server-side paths
  Malicious File Upload
        site allows unsanitized file uploads
  Command Injection:
        app on server is vuln, allowing exec of arbit commands
        run following to chain/stack our arbitrary command - ;cat /etc/passwd








